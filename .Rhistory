install('swirl')
install.packages("swirl")
library(maps)
library(mapdata)
map("worldHires","Canada”, xlim=c(-141,-53), ylim=c(40,85), col="gray90”, fill=TRUE)
install.packages('maps')
library("maps", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?world
data("worldMapEnv")
install.packages('mapdata')
library("mapdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(maps)
library(mapdata)
map("worldHires","Canada”, xlim=c(-141,-53), ylim=c(40,85), col="gray90”, fill=TRUE)
map("worldHires","Canada”, xlim=c(-141,-53), ylim=c(40,85), col="gray90", fill=TRUE)
map("worldHires","Canada", xlim=c(-141,-53), ylim=c(40,85), col="gray90", fill=TRUE)
map("worldHires","Mexico", xlim=c(-141,-53), ylim=c(40,85), col="gray90", fill=TRUE)
install.packages('maptools')
require(devtools)
install_github('ramnathv/rCharts@dev')
require(ggmap)
mapImageData1 <- get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData2 <- get_map(location = c(lon = 25.8231088,lat = -108.9940087), color="color", source = "google", maptype = "satellite", zoom = 17)
mapImageData2 <- get_map(location = c(lon = 25.8231088,lat = -18.9940087), color="color", source = "google", maptype = "satellite", zoom = 17)
ggmap(mapImageData2, extent = "device", ylab = "Latitude", xlab= "Longitude")
qmap('Liverpool')
qmap('Sinaloa')
?rnorm
help.search(rnorm)
help.search("rnorm")
args("rnorm")
rnorm
lapply
a <- available.packages()
head(rownames(a,3))
head(rownames(a),3)
head(rownames(a),10)
head(rownames(a),20)
install.packages("slidify")
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(airquality)
cor(aircuality)
cor(airquality)
View(airquality)
View(airquality)
install.packages(inegiR)
library(devtools)
install_github("Eflores89/inegiR")
library(inegiR)
token <- "154a79b8-ff58-dfa7-c18b-4af1b834a9d3"
urlINPC <- "http://www3.inegi.org.mx/sistemas/api/indicadores/v1//Indicador/216064/00000/es/false/xml/"
urlINPC
urlINPC2 <- "http://www3.inegi.org.mx/sistemas/api/indicadores/v1//Indicador/216064/00000/es/false/json/"
INPC <- serie_inegi(urlINPC, token)
tail(INPC)
INPC_Metadata <- serie_inegi(urlINPC, token, metadata = TRUE)
class(INPC_Metadata)
INPC_Metadata$MetaData
INPC_Metadata
INPC_Metadata$MetaData
INPC_Metadata$MetaData$UltimaActualizacion
INPC_Metadata$MetaData$Nombre
INPC_Metadata$MetaData$Frecuencia
INPC_Metadata$MetaData$Frecuencia
INPC_Metadata
Inflation <- YoY(INPC$Valores,
lapso = 12,
decimal=FALSE)
Inflation_df <- cbind.data.frame(Fechas = INPC$Fechas,
Inflation = Inflation)
tail(Infraltion_df)
Inflation <- YoY(INPC$Valores,
lapso=12,
decimal=FALSE)
Inflation
Inflation_df
tail(Inflation_df)
plot(Inflation_df)
Inflation_df$Inflation
plot(Inflation_df$Inflation)
Inflation_df$Inflation
Inflation_df$Inflation.
Inflation_df$Inflation.plot
Inflation_df$Inflation
View(Inflation_df)
x <- 1:20
x
x <- 1:20
x
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
source('~/electoral_data.R')
mydata2
source('~/electoral_data.R')
source('~/electoral_data.R')
source('~/electoral_data.R')
dst
source('~/electoral_data.R')
source('~/Code/Pablo/alphaproject/mark_quads.R')
source('~/Code/Pablo/alphaproject/loda_data.R')
source('~/electoral_data.R')
source('~/electoral_data.R')
source('~/electoral_data.R')
partidos[1,]
partidos[2,]
partidos[3,]
dst[partidos[1,]]
dst(partidos[1,])
ganador
ganador[1]
source('~/electoral_data.R')
source('~/electoral_data.R')
names(mydata2)
class(mydata2)
mydata2
dist_g
colnames(mydata2)
dist_g
source('~/electoral_data.R')
dist_g
source('~/electoral_data.R')
dataframe(c("uno", "dos", "tres"))
data.frame(c("uno", "dos", "tres"))
source('~/electoral_data.R')
mydata2
dist_g
nrow(dist_g)
test <- foreach (i = 1:N, .combine = c) %dopar% {
dst(partidos_s[i,], ganador[i])
}
test
tr("POB18")
foreach (i = 1:N, .combine = c) %dopar% {
dst(partidos_s[i,], ganador[i])
}
dst
dst(partidos_s[1,], ganador[1])
source('~/electoral_data.R')
dst(partidos_s[1,], ganador[1])
partidos_row <- partidos_s[1,]
partidos_row
partidos_row[["PRI"]]
partidos_row[[ganador[1]]]
partidos_row[["PRI"]] - partidos_row[[ganador[1]]]
max(partidos_ro[hip_parties])
max(partidos_row[hip_parties])
source('~/electoral_data.R')
dist_g
dst(partidos_s[5,], ganador[5])
dst(partidos_s[5,], ganador[5])
dst(partidos_s[5,], ganador[5])
dst(partidos_s[5,], ganador[5])
source('~/electoral_data.R')
source('~/electoral_data.R')
dist_g
colnames(mydata2)
plot(mydata2$GRAPROES_F - mydata2$GRAPROES_F, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$GRAPROES, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$POBTOT, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$POBTOT, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$POBTOT, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$POBTOT, mydata2$dist_g)
plot( (mydata2$GRAPROES_F - mydata2$GRAPROES_F)/mydata2$GRAPROES_F, mydata2$dist_g)
source('~/Code/Pablo/alphaproject/loda_data.R')
hist(mydata2$dist_g)
hist(mydata2$GRAPROES_F)
hist(mydata2$GRAPROES_M)
hist(mydata2$GRAPROES_F)
scatterhist = function(x, y, xlab="", ylab=""){
zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(3,3,1,1))
plot(x,y)
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(mydata2$GRAPROES, mydata2$dist_g)
scatterhist(mydata2$GRAPROES_F, mydata2$dist_g)
scatterhist(mydata2$GRAPROES_M, mydata2$dist_g)
scatterhist(mydata2$GRAPROES_F/mydata2$GRAPROES_M, mydata2$dist_g)
scatterhist((mydata2$GRAPROES_F-mydata2$GRAPROES_M)/mydata2$GRAPROES_M, mydata2$dist_g)
scatterhist((mydata2$GRAPROES_F-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$PEA_F, mydata2$dist_g)
scatterhist(mydata2$PEA_F, mydata2$dist_g)
scatterhist(mydata2$PEA_F/mydata2$POBFEM, mydata2$dist_g)
scatterhist(mydata2$PEA_F, mydata2$dist_g)
scatterhist(mydata2$PEA_F/mydata2$PEA, mydata2$dist_g)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g)
abline(v = 0)
??abline
abline(v = 0)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g, xlab = "Diferencia porcentual de actividad económica respecto a las mujeres", ylab = "")
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "")
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
mydata2[mydata2$PEA_F-mydata2$PEA_M>0]
mydata2[mydata2$PEA_F-mydata2$PEA_M>0,]
mydata2[mydata2$PEA_F-mydata2$PEA_M>0,]
test <- mydata2[mydata2$PEA_F-mydata2$PEA_M>0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
test
summary(test)
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist((mydata2$PEA_F-mydata2$PEA_M), mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist(mydata$OCUPVIVPAR, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist(mydata$PROM_OCUP, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
tr("PROM_OCUP")
tr("PROM_OCUP_C")
tr("PROM_OCUPC")
scatterhist(mydata2$PROM_OCUP, mydata2$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
mean(mydata2$PROM_OCUP)
median(mydata2$PROM_OCUP)
mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP)]
mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP),]
test <- mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP),]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g, xlab = "D% actividad económica respecto a las mujeres", ylab = "dist_g")
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP) & mydata2$dist_g>=0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP) & mydata2$dist_g<0,]
test <- mydata2[mydata2$PROM_OCUP > mean(mydata2$PROM_OCUP) & mydata2$dist_g<0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP >= mean(mydata2$PROM_OCUP) & mydata2$dist_g>=0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP < mean(mydata2$PROM_OCUP) & mydata2$dist_g>=0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP < mean(mydata2$PROM_OCUP) & mydata2$dist_g<0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, test$dist_g)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g)
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
test <- mydata2[mydata2$PROM_OCUP < mean(mydata2$PROM_OCUP) & mydata2$dist_g>0,]
scatterhist((test$PEA_F-test$PEA_M)/test$PEA, test$dist_g)
exp
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, exp(mydata2$dist_g))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g**2)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, abs(mydata2$dist_g))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, abs(mydata2$dist_g))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, log(mydata2$dist_g))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g**2)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, log(mydata2$dist_g+1))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, log(mydata2$dist_g+1))
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g)
scatterhist(log((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA), mydata2$dist_g)
scatterhist(log(1+(mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA), mydata2$dist_g)
scatterhist((mydata2$PEA_F-mydata2$PEA_M)/mydata2$PEA, mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), log(mydata2$dist_g + min(mydata2$dist_g)))
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), log(mydata2$dist_g + abs(min(mydata2$dist_g))))
scatterhist(log(2+mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), exp(mydata2$dist_g))
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M)**2, mydata2$dist_g)
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M), mydata2$dist_g)
mydata2$GRAPROES-mydata2$GRAPROES_M
max(mydata2$GRAPROES-mydata2$GRAPROES_M)
max.col(mydata2$GRAPROES-mydata2$GRAPROES_M)
mydata2$GRAPROES-mydata2$GRAPROES_M>1
mydata2$GRAPROES-mydata2$GRAPROES_M>3
mydata2$GRAPROES-mydata2$GRAPROES_M>3.8
mydata2$GRAPROES-mydata2$GRAPROES_M>3.7
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3.7,]
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3.7,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3.5,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3.5,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>2,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>1,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>1,]$GANADOR
mydata2[mydata2$GRAPROES-mydata2$GRAPROES_M>3.7,]$P15SEC_CO
tr("P15SEC_CO")
mydata$P15SEC_CO
tr("P15SEC_CO")
View(dat)
dat[dat$GRAPROES_F-dat$GRAPROES_M>3.7]
dat[dat$GRAPROES_F-dat$GRAPROES_M]
dat[dat$GRAPROES_F-dat$GRAPROES_M,]
dat$GRAPROES_F-dat$GRAPROES_M
dat$GRAPROES_F-dat$GRAPROES_M>3.7
max(dat$GRAPROES_F-dat$GRAPROES_M)
dat$GRAPROES_F-dat$GRAPROES_M==4
dat[dat$GRAPROES_F-dat$GRAPROES_M==4]
dat[dat$GRAPROES_F-dat$GRAPROES_M==4,]
dat[dat$GRAPROES_F-dat$GRAPROES_M==4,]$SECCION
dat[dat$GRAPROES_F-dat$GRAPROES_M==4,]$DISTRITO
scatterhist((mydata2$GRAPROES-mydata2$GRAPROES_M)/mydata2$GRAPROES, mydata2$dist_g)
str(browser)
str(trace)
str(recover)
x
z
u
mean(u)
traceback()
lm(u-x)
traceback()
lm(y-x)
traceback()
debug(lm)
lm(y-x)
lm(y-x)
options(error = recover)
read.csv("nosuchfile")
2
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
play()
nxt()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
quit
library(datasets)
data(iris)
?iris
mean(iris$Sepal.Length)
round
round(mean(iris$Sepal.Length))
irid[[c('Sepal.Length', 'Sepal.Width', 'Petal.Length')]]
irid[c('Sepal.Length', 'Sepal.Width', 'Petal.Length'),]
iris[[c('Sepal.Length', 'Sepal.Width', 'Petal.Length')]]
iris[[c('Sepal.Length', 'Sepal.Width', 'Petal.Length'),]]
iris[c('Sepal.Length', 'Sepal.Width', 'Petal.Length'),]
head(iris)
iris[1:4]
head(iris[1:4])
apply(iris[1:4], mean)
apply(iris[1:4], 2, mean)
?apply
iris[, 1:4]
head(iris[, 1:4])
apply(iris[,1:4], 2, mean)
apply(iris[,1:4], 1, mean)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
test <- tapply(mtcars$mpg, mtcars$cyl, mean)
test[1]
test[2]
test[3]
test[1]-test[3]
test[[1]]-test[[3]]
round(test[[1]]-test[[3]])
debug(ls)
ls
ls()
apply(iris[,1:4], 2, mean)
quit
quit
